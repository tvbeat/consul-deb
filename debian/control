Source: consul
Section: utils
Priority: optional
Maintainer: Andrea Bernardo Ciddio <bcandrea@gmail.com>
Homepage: http://www.consul.io
Vcs-Git: https://github.com/hashicorp/consul.git
Vcs-Browser: https://github.com/hashicorp/consul
Standards-Version: 3.9.3
Build-Depends: debhelper (>= 9), golang-go (>= 2:1.2), git, zip

Package: consul
Architecture: any
Suggests: consul-web-ui
Depends: ${misc:Depends}
Description: A tool for discovering and configuring services - main package
 Consul is a tool for service discovery and configuration. Consul is
 distributed, highly available, and extremely scalable. Consul provides 
 several key features:
 * Service Discovery - Consul makes it simple for services to register
   themselves and to discover other services via a DNS or HTTP interface.
   External services such as SaaS providers can be registered as well.
 * Health Checking - Health Checking enables Consul to quickly alert
   operators about any issues in a cluster. The integration with service
   discovery prevents routing traffic to unhealthy hosts and enables service
   level circuit breakers.
 * Key/Value Storage - A flexible key/value store enables storing
   dynamic configuration, feature flagging, coordination, leader election and
   more. The simple HTTP API makes it easy to use anywhere.
 * Multi-Datacenter - Consul is built to be datacenter aware, and can
   support any number of regions without complex configuration.
 .
 This is the main package. It installs the consul binary, which is the only
 required component on both client and server nodes.

Package: consul-web-ui
Section: utils
Architecture: all
Depends: consul, ${misc:Depends}
Description: A tool for discovering and configuring services - web user interface
 Consul is a tool for service discovery and configuration. Consul is
 distributed, highly available, and extremely scalable. Consul provides 
 several key features:
 * Service Discovery - Consul makes it simple for services to register
   themselves and to discover other services via a DNS or HTTP interface.
   External services such as SaaS providers can be registered as well.
 * Health Checking - Health Checking enables Consul to quickly alert
   operators about any issues in a cluster. The integration with service
   discovery prevents routing traffic to unhealthy hosts and enables service
   level circuit breakers.
 * Key/Value Storage - A flexible key/value store enables storing
   dynamic configuration, feature flagging, coordination, leader election and
   more. The simple HTTP API makes it easy to use anywhere.
 * Multi-Datacenter - Consul is built to be datacenter aware, and can
   support any number of regions without complex configuration.
 .
 This package contains a web user interface that can be used to monitor the
 network of consul nodes.
